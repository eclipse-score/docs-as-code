{"current_version": "0.1", "project": "Score Docs-as-Code", "versions": {"0.1": {"creator": {"program": "sphinx_needs", "version": "5.1.0"}, "needs": {"feat_req__example__some_title": {"content": "With this requirement we can check if the removal of the prefix is working correctly.\nIt should remove id_prefix (SCORE _) as it's defined inside the BUILD file and remove it before it checks the leftover value\nagainst the allowed defined regex in the metamodel\nNote: The ID is different here as the 'folder structure' is as well", "docname": "example/index", "external_css": "external_link", "id": "feat_req__example__some_title", "layout": "score", "lineno": 38, "reqtype": "Process", "safety": "ASIL_D", "satisfies": ["SCORE_stkh_req__overall_goals__reuse_of_app_soft"], "section_name": "Example", "sections": ["Example"], "security": "YES", "status": "invalid", "title": "Some Title", "type": "feat_req", "type_name": "Feature Requirement"}, "feat_req__testing__some_title": {"content": "With this requirement we can check if the removal of the prefix is working correctly.\nIt should remove id_prefix (SCORE _) as it's defined inside the BUILD file and remove it before it checks the leftover value\nagainst the 'allowed' defined regex in the metamodel", "docname": "example/testing/index", "external_css": "external_link", "id": "feat_req__testing__some_title", "layout": "score", "lineno": 32, "reqtype": "Process", "safety": "ASIL_D", "satisfies": ["SCORE_stkh_req__overall_goals__reuse_of_app_soft"], "section_name": "Inside a folder", "sections": ["Inside a folder"], "security": "YES", "status": "invalid", "title": "Some Title", "type": "feat_req", "type_name": "Feature Requirement"}, "stkh_req__index__test_requirement": {"content": "Some content to make sure we also can render this\nThis is a link to an external need inside the 'score' documentation.\n:need:`SCORE_gd_req__req__attr_safety`\nNote how it starts with the defined prefix but in UPPERCASE. This comes from sphinx-needs, `see here <https://github.com/useblocks/sphinx-needs/blob/master/sphinx_needs/external_needs.py#L119>`_", "docname": "example/index", "external_css": "external_link", "id": "stkh_req__index__test_requirement", "layout": "score", "lineno": 24, "rationale": "A simple requirement we need to enable a documentation build", "reqtype": "Functional", "safety": "QM", "section_name": "Example", "sections": ["Example"], "status": "valid", "title": "TestTitle", "type": "stkh_req", "type_name": "Stakeholder Requirement"}, "stkh_req__testing__test_requirement": {"content": "Some content to make sure we also can render this.\nThis is a link to an external need inside the 'score' documentation.\n:need:`SCORE_gd_req__req__attr_safety`\nNote how it starts with the defined prefix but in UPPERCASE. This comes from sphinx-needs, `see here <https://github.com/useblocks/sphinx-needs/blob/master/sphinx_needs/external_needs.py#L119>`_", "docname": "example/testing/index", "external_css": "external_link", "id": "stkh_req__testing__test_requirement", "layout": "score", "lineno": 19, "rationale": "A simple requirement we need to enable a documentation build", "reqtype": "Functional", "safety": "QM", "section_name": "Inside a folder", "sections": ["Inside a folder"], "status": "valid", "title": "TestTitle", "type": "stkh_req", "type_name": "Stakeholder Requirement"}, "tool_req__attr_description": {"content": "Each requirement must contain a non-empty description.\n\nApplies to:\n\n* Stakeholder requirement\n* Feature requirement\n* Component requirement\n* Assumption of use requirement\n* Process requirement\n\n.. warning::\n   All those \"applies to\" need to be matched exactly against available types,\n   e.g. \"process requirement\" is quite vague.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_description", "implemented": "NO", "is_modified": true, "layout": "score", "lineno": 89, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__requirements_attr_description"], "section_name": "\ud83d\udcdd Description Requirements", "sections": ["\ud83d\udcdd Description Requirements", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces presence of description", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_id": {"content": "Need IDs must be globally unique.\n\n.. note::\n   Implementation note (in some sort of DR in the future??).\n   IDs are unique within one docs-instance, this is guaranteed by sphinx-needs.\n   Several docs-instances are always independent. When they are linked, they always\n   receive unique prefixes for their IDs.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_id", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 27, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_uid", "PROCESS_gd_req__tool__attr_uid"], "section_name": "\ud83d\udcdb ID Rules", "sections": ["\ud83d\udcdb ID Rules", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces need ID uniqueness", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_id_scheme": {"content": "Need IDs must:\n\n* Start with the need type (e.g. ``feature__``)\n* Include the feature name (for feature requirements)\n* Have additional text\n\nThis applies to needs of type:\n\n* Stakeholder requirements\n* Feature requirements\n* Component requirements", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_id_scheme", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 42, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_uid"], "section_name": "\ud83d\udcdb ID Rules", "sections": ["\ud83d\udcdb ID Rules", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces need ID scheme", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_impl": {"content": "Source code can link to requirements.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_impl", "implemented": "PARTIAL", "is_modified": true, "layout": "score", "lineno": 294, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_impl"], "section_name": "\ud83d\udcce Code Linkage", "sections": ["\ud83d\udcce Code Linkage", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Supports linking to source code", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_rationale": {"content": "Each stakeholder requirement must contain a non-empty ``rationale`` attribute.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_rationale", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 113, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_rationale"], "section_name": "\ud83e\udde0 Rationale Requirements", "sections": ["\ud83e\udde0 Rationale Requirements", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces rationale attribute", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_safety": {"content": "Needs of type:\n\n* stakeholder requirements\n* feature requirements\n* component requirements\n* assumption of use requirements\n* process requirements\n* Tool Verification Report\n\nshall have a automotive safety integrity level (``safety``) identifier:\n\n* QM\n* ASIL_B\n* ASIL_D\n\n.. warning::\n   the architecture requirement does not talk about architecture elements, but about requirements.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_safety", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 177, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_safety"], "section_name": "\ud83d\udee1\ufe0f Safety Classification", "sections": ["\ud83d\udee1\ufe0f Safety Classification", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces safety classification", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_security": {"content": "The ``security`` attribute must be one of:\n\n* YES\n* NO\n\nIt is mandatory for:\n\n* stakeholder requirements\n* feature requirements\n* component requirements\n* assumption of use requirements\n* process requirements\n* Tool Verification Report\n\n.. warning::\n   the architecture requirement does not talk about architecture elements, but about requirements.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_security", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 149, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__requirements_attr_security", "PROCESS_gd_req__arch_attr_security"], "section_name": "\ud83d\udd10 Security Classification", "sections": ["\ud83d\udd10 Security Classification", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces security classification", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_status": {"content": "Needs of type:\n\n* stakeholder requirements\n* feature requirements\n* component requirements\n* assumption of use requirements\n* process requirements\n* Tool Verification Report\n\nshall have an ``status`` attribute, which must be one of:\n\n* valid\n* invalid\n\n.. warning::\n   the architecture requirement does not talk about architecture elements, but about requirements.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_status", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 204, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_status", "PROCESS_gd_req__arch__attr_status"], "section_name": "\ud83d\udcc8 Status Classification", "sections": ["\ud83d\udcc8 Status Classification", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces status classification (1st part)", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_status_tool_verification": {"content": "The Tool Verification Report shall have an ``status`` attribute, which must be one of:\n\n* draft\n* evaluated\n* qualified\n* released\n* rejected", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_status_tool_verification", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 228, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__tool__attr_status"], "section_name": "\ud83d\udcc8 Status Classification", "sections": ["\ud83d\udcc8 Status Classification", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces status classification (tool Verification Report)", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_title": {"content": "Titles must not contain the words:\n* ``shall``\n* ``must``\n* ``will``\n\nApplies to:\n\n* stakeholder requirements\n* feature requirements\n* component requirements\n\n.. warning::\n   Process requirement forbids only ``shall``.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_title", "implemented": "PARTIAL", "is_modified": true, "layout": "score", "lineno": 63, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__requirements_attr_title"], "section_name": "\ud83e\uddfe Title Requirements", "sections": ["\ud83e\uddfe Title Requirements", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces title wording rules", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__attr_type": {"content": "The ``reqtype`` attribute must be one of:\n\n* Functional\n* Interface\n* Process\n* Legal\n* Non-Functional\n\nApplies to:\n\n* Stakeholder requirement\n* Feature requirement\n* Component requirement\n* Assumption of use requirement\n* Process requirement", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__attr_type", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 124, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_type"], "section_name": "\ud83c\udff7\ufe0f Requirement Type Rules", "sections": ["\ud83c\udff7\ufe0f Requirement Type Rules", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enforces requirement type classification", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__covered": {"content": "To be clarified.", "docname": "docs-as-code/requirements", "external_css": "external_link", "has_dead_links": true, "has_forbidden_dead_links": true, "id": "tool_req__covered", "implemented": "PARTIAL", "is_modified": true, "layout": "score", "lineno": 245, "modifications": 1, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__attr_req_cov"], "section_name": "\u201crequirement covered\u201d", "sections": ["\u201crequirement covered\u201d", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "invalid", "title": "Enables marking requirements as \"covered\"", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__linkage": {"content": "The tool shall allow and check for linking of requirements to specific levels.\nIn the table underneath you can see which requirement type can link to which other one\n\n.. table::\n   :widths: auto\n\n   ========================  ===========================\n   Requirement Type          Allowed Link Target\n   ========================  ===========================\n   Stakeholder               Feature Requirements\n   Feature Requirements      Component Requirements\n   Workflows                 Process Requirements\n   ========================  ===========================", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__linkage", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 270, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__linkage"], "section_name": "\ud83d\udd17 \u201crequirement linkage\u201d", "sections": ["\ud83d\udd17 \u201crequirement linkage\u201d", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Enables linking from/to requirements", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__metamodel": {"content": "The docs-as-code metamodel shall enforce process requirements.\n\n.. note:: only process requirements which are fully covered by metamodel.yml are linked to this catch-all requirement!", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__metamodel", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 343, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__structure", "PROCESS_gd_req__requirements_attr_description", "PROCESS_gd_req__req__attr_type", "PROCESS_gd_req__requirements_attr_security", "PROCESS_gd_req__req__attr_safety", "PROCESS_gd_req__req__attr_status", "PROCESS_gd_req__req__attr_rationale", "PROCESS_gd_req__req__linkage", "PROCESS_gd_req__req__attr_mandatory", "PROCESS_gd_req__req__linkage_fulfill", "PROCESS_gd_req__req__linkage_architecture", "PROCESS_gd_req__arch__build_blocks", "PROCESS_gd_req__arch__build_blocks_corr", "PROCESS_gd_req__arch_attr_security", "PROCESS_gd_req__arch__attr_safety", "PROCESS_gd_req__arch__attr_status", "PROCESS_gd_req__arch__attr_fulfils", "PROCESS_gd_req__arch__traceability"], "section_name": "\ud83c\udfd7 Metamodel", "sections": ["\ud83c\udfd7 Metamodel", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Supports requirement metamodel", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__metamodel_partial": {"content": "The docs-as-code metamodel shall enforce process requirements.\n\n.. note:: once implemented, move the satisfies-links to tool_req__metamodel. This list contains not fully implemented or non understood requirements.", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__metamodel_partial", "implemented": "PARTIAL", "is_modified": true, "layout": "score", "lineno": 370, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__requirements_attr_title", "PROCESS_gd_req__req__attr_desc_weak", "PROCESS_gd_req__req__attr_req_cov", "PROCESS_gd_req__req__attr_test_covered"], "section_name": "\ud83c\udfd7 Metamodel", "sections": ["\ud83c\udfd7 Metamodel", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Supports requirement metamodel (partially implemented)", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__req_test_cov": {"content": "| Requirements shall allow for an attribute that shows if the requirement is covered by linked test cases.\n| Allowed values:\n\n* Yes\n* No", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__req_test_cov", "implemented": "NO", "is_modified": true, "layout": "score", "lineno": 254, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_test_covered"], "section_name": "\u201crequirement covered\u201d", "sections": ["\u201crequirement covered\u201d", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Support requirements test coverage", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__requirement_levels": {"content": "The tool supports the following requirement levels:\n\n* Stakeholder requirements\n* Feature requirements\n* Component requirements\n* Assumption of use requirements\n* Process requirements", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__requirement_levels", "implemented": "YES", "is_modified": true, "layout": "score", "lineno": 315, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_uid"], "section_name": "\ud83c\udfd7 Requirement Level Types", "sections": ["\ud83c\udfd7 Requirement Level Types", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Supports multiple requirement levels", "type": "tool_req", "type_name": "Tool Requirement"}, "tool_req__test_case_linkage": {"content": "Docs-as-code shall provide a way to automatically link test cases to requirements", "docname": "docs-as-code/requirements", "external_css": "external_link", "id": "tool_req__test_case_linkage", "implemented": "NO", "is_modified": true, "layout": "score", "lineno": 302, "modifications": 2, "reqtype": "Functional", "safety": "QM", "satisfies": ["PROCESS_gd_req__req__attr_testlink"], "section_name": "\ud83d\udcce Code Linkage", "sections": ["\ud83d\udcce Code Linkage", "Details", "Requirements (Process Compliance)"], "security": "NO", "status": "valid", "title": "Supports linking to test cases", "type": "tool_req", "type_name": "Tool Requirement"}}, "needs_amount": 22, "needs_defaults_removed": true, "needs_schema": {"$schema": "http://json-schema.org/draft-07/schema#", "properties": {"approved_by": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "approved_by_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "approvers": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "arch": {"additionalProperties": {"type": "string"}, "default": {}, "description": "Mapping of uml key to uml content.", "field_type": "core", "type": "object"}, "avatar": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "closed_at": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "codelink": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "completion": {"default": "", "description": "Added for needgantt functionality", "field_type": "extra", "type": "string"}, "complies": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "complies_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "constraints": {"default": [], "description": "List of constraint names, which are defined for this need.", "field_type": "core", "items": {"type": "string"}, "type": "array"}, "constraints_error": {"default": "", "description": "An error message set if any constraint failed, and `error_message` field is set in config.", "field_type": "core", "type": "string"}, "constraints_passed": {"default": true, "description": "True if all constraints passed, False if any failed, None if not yet checked.", "field_type": "core", "type": "boolean"}, "constraints_results": {"additionalProperties": {"type": "object"}, "default": {}, "description": "Mapping of constraint name, to check name, to result.", "field_type": "core", "type": "object"}, "contains": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "contains_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "content": {"default": "", "description": "Content of the need.", "field_type": "core", "type": "string"}, "created_at": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "docname": {"default": null, "description": "Name of the document where the need is defined (None if external).", "field_type": "core", "type": ["string", "null"]}, "doctype": {"default": ".rst", "description": "Type of the document where the need is defined, e.g. '.rst'.", "field_type": "core", "type": "string"}, "duration": {"default": "", "description": "Added for needgantt functionality", "field_type": "extra", "type": "string"}, "external_css": {"default": "", "description": "CSS class name, added to the external reference.", "field_type": "core", "type": "string"}, "external_url": {"default": null, "description": "URL of the need, if it is an external need.", "field_type": "core", "type": ["string", "null"]}, "fulfils": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "fulfils_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "has": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "has_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "has_dead_links": {"default": false, "description": "True if any links reference need ids that are not found in the need list.", "field_type": "core", "type": "boolean"}, "has_forbidden_dead_links": {"default": false, "description": "True if any links reference need ids that are not found in the need list, and the link type does not allow dead links.", "field_type": "core", "type": "boolean"}, "hash": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "id": {"description": "ID of the data.", "field_type": "core", "type": "string"}, "id_prefix": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "implemented": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "implements": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "implements_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "included_by": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "included_by_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "includes": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "includes_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "input": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "input_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "is_external": {"default": false, "description": "If true, no node is created and need is referencing external url.", "field_type": "core", "type": "boolean"}, "is_modified": {"default": false, "description": "Whether the need was modified by needextend.", "field_type": "core", "type": "boolean"}, "is_need": {"default": true, "description": "Whether the need is a need.", "field_type": "core", "type": "boolean"}, "is_part": {"default": false, "description": "Whether the need is a part.", "field_type": "core", "type": "boolean"}, "jinja_content": {"default": false, "description": "Whether the content should be pre-processed by jinja.", "field_type": "core", "type": "boolean"}, "language": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "layout": {"default": null, "description": "Key of the layout, which is used to render the need.", "field_type": "core", "type": ["string", "null"]}, "lineno": {"default": null, "description": "Line number where the need is defined (None if external).", "field_type": "core", "type": ["integer", "null"]}, "links": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "links_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "max_amount": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "max_content_lines": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "modifications": {"default": 0, "description": "Number of modifications by needextend.", "field_type": "core", "type": "integer"}, "output": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "output_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "params": {"default": "", "description": "Added by service open-needs", "field_type": "extra", "type": "string"}, "parent_need": {"default": "", "description": "Simply the first parent id.", "field_type": "core", "type": "string"}, "parent_needs": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "parent_needs_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "parts": {"additionalProperties": {"type": "object"}, "default": {}, "description": "Mapping of parts, a.k.a. sub-needs, IDs to data that overrides the need's data", "field_type": "core", "type": "object"}, "post_content": {"default": "", "description": "Post-content of the need.", "field_type": "core", "type": "string"}, "post_template": {"default": null, "description": "Post-template of the need.", "field_type": "core", "type": ["string", "null"]}, "pre_content": {"default": "", "description": "Pre-content of the need.", "field_type": "core", "type": "string"}, "pre_template": {"default": null, "description": "Pre-template of the need.", "field_type": "core", "type": ["string", "null"]}, "prefix": {"default": "", "description": "Added by service open-needs", "field_type": "extra", "type": "string"}, "query": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "rationale": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "realizes": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "reqcovered": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "reqtype": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "responsible": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "responsible_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "reviewers": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "safety": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "satisfies": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "satisfies_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "section_name": {"default": "", "description": "Simply the first section.", "field_type": "core", "type": "string"}, "sections": {"default": [], "description": "Sections of the need.", "field_type": "core", "items": {"type": "string"}, "type": "array"}, "security": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "service": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "signature": {"default": "", "description": "Derived from a docutils desc_name node.", "field_type": "core", "type": "string"}, "source_code_link": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "specific": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "status": {"default": null, "description": "Status of the need.", "field_type": "core", "type": ["string", "null"]}, "style": {"default": null, "description": "Comma-separated list of CSS classes (all appended by `needs_style_`).", "field_type": "core", "type": ["string", "null"]}, "supported_by": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "supported_by_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}, "tags": {"default": [], "description": "List of tags.", "field_type": "core", "items": {"type": "string"}, "type": "array"}, "template": {"default": null, "description": "Template of the need.", "field_type": "core", "type": ["string", "null"]}, "testcovered": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "testlink": {"default": "", "description": "Added by needs_extra_options config", "field_type": "extra", "type": "string"}, "title": {"description": "Title of the need.", "field_type": "core", "type": "string"}, "type": {"default": "", "description": "Type of the need.", "field_type": "core", "type": "string"}, "type_name": {"default": "", "description": "Name of the type.", "field_type": "core", "type": "string"}, "updated_at": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "url": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "url_postfix": {"default": "", "description": "Added by service open-needs", "field_type": "extra", "type": "string"}, "user": {"default": "", "description": "Added by service github-issues", "field_type": "extra", "type": "string"}, "uses": {"default": [], "description": "Link field", "field_type": "links", "items": {"type": "string"}, "type": "array"}, "uses_back": {"default": [], "description": "Backlink field", "field_type": "backlinks", "items": {"type": "string"}, "type": "array"}}, "type": "object"}}}}