# This file is auto-generated by needs-config-writer.
# It is a duplicate of shared and local configs to make tools like ubCode / ubc work.
# Do not manually modify it - changes will be overwritten.

[needs]
build_json = true
build_needumls = "_plantuml_sources"
extra_options = [
    "approver",
    "approvers",
    "author",
    "codelink",
    "consequences",
    "context",
    "decision",
    "derivation_technique",
    "failure_effect",
    "failure_id",
    "fault_id",
    "file",
    "hash",
    "implemented",
    "language",
    "line",
    "mitigation_issue",
    "name",
    "parent_covered",
    "parent_has_problem",
    "rationale",
    "reqcovered",
    "reqtype",
    "result",
    "result_text",
    "reviewer",
    "reviewers",
    "safety",
    "safety_affected",
    "security",
    "security_affected",
    "source_code_link",
    "sufficient",
    "tcl",
    "test_type",
    "testcovered",
    "testlink",
    "valid_from",
    "valid_until",
    "version",
]
id_regex = "^[A-Za-z0-9_-]{6,}"
id_required = true
json_remove_defaults = true
reproducible_json = true

[[needs.external_needs]]
base_url = "https://eclipse-score.github.io/process_description//main"
id_prefix = "PROCESS_"
json_path = "../bazel-bin/external/score_process+/needs_json/_build/needs/needs.json"

[[needs.extra_links]]
incoming = "approves"
option = "approved_by"
outgoing = "approved by"

[[needs.extra_links]]
incoming = "complies to"
option = "complies"
outgoing = "complies"

[[needs.extra_links]]
incoming = "contained by"
option = "contains"
outgoing = "contains"

[[needs.extra_links]]
incoming = "fulfilled by"
option = "fulfils"
outgoing = "fulfils"

[[needs.extra_links]]
incoming = "fully_verified_by"
option = "fully_verifies"
outgoing = "fully_verifies"

[[needs.extra_links]]
incoming = "relates to"
option = "has"
outgoing = "has"

[[needs.extra_links]]
incoming = "implemented by"
option = "implements"
outgoing = "implements"

[[needs.extra_links]]
incoming = "includes"
option = "included_by"
outgoing = "included by"

[[needs.extra_links]]
incoming = "included by"
option = "includes"
outgoing = "includes"

[[needs.extra_links]]
incoming = "is input to"
option = "input"
outgoing = "needs input"

[[needs.extra_links]]
color = "#000000"
copy = false
incoming = "links incoming"
option = "links"
outgoing = "links outgoing"

[[needs.extra_links]]
incoming = "mititages"
option = "mitigated_by"
outgoing = "mitigated_by"

[[needs.extra_links]]
incoming = "is output from"
option = "output"
outgoing = "outputs"

[[needs.extra_links]]
color = "#333333"
copy = false
incoming = "child needs"
option = "parent_needs"
outgoing = "parent needs"

[[needs.extra_links]]
incoming = "partially_verified_by"
option = "partially_verifies"
outgoing = "partially_verifies"

[[needs.extra_links]]
incoming = "realized by"
option = "realizes"
outgoing = "realizes"

[[needs.extra_links]]
incoming = "is responsible for"
option = "responsible"
outgoing = "responsible"

[[needs.extra_links]]
incoming = "satisfied by"
option = "satisfies"
outgoing = "satisfies"

[[needs.extra_links]]
incoming = "supports"
option = "supported_by"
outgoing = "supported by"

[[needs.extra_links]]
incoming = "used by"
option = "uses"
outgoing = "uses"

[[needs.extra_links]]
incoming = "violated_by"
option = "violates"
outgoing = "violates"

[needs.global_options.layout]
default = "score"

[needs.graphviz_styles.default.edge]
minlen = "2"

[needs.graphviz_styles.default.node]
margin = "0.21,0.11"

[needs.graphviz_styles.lefttoright.graph]
rankdir = "LR"

[needs.graphviz_styles.toptobottom.graph]
rankdir = "TB"

[needs.graphviz_styles.transparent.graph]
bgcolor = "transparent"

[needs.layouts.focus]
grid = "content"

[needs.layouts.focus.layout]

[needs.layouts.github]
grid = "complex"

[needs.layouts.github.layout]
footer = [
    "service:  <<meta(\"service\")>>",
]
footer_left = [
    "layout: <<meta(\"layout\")>>",
]
footer_right = [
    "style: <<meta(\"style\")>>",
]
head = [
    "**<<meta(\"title\")>>** (<<link(\"url\", text=\"url\", is_dynamic=True)>>)",
]
head_left = [
    "<<meta_id()>>",
    "<<collapse_button(\"meta,footer\", collapsed=\"icon:arrow-down-circle\", visible=\"icon:arrow-right-circle\", initial=True)>>",
]
head_right = [
    "<<image(\"field:avatar\", width=\"40px\", align=\"middle\")>>",
    "<<meta(\"user\")>>",
]
meta_left = [
    "<<meta(\"user\", prefix=\"user: \")>>",
    "<<meta(\"created_at\", prefix=\"created_at: \")>>",
    "<<meta(\"updated_at\", prefix=\"updated_at: \")>>",
    "<<meta(\"closed_at\", prefix=\"closed_at: \")>>",
    "<<meta(\"service\", prefix=\"service: \")>>",
    "<<link(\"url\", text=\"Link\", prefix=\"url: \", is_dynamic=True)>>",
]
meta_right = [
    "<<meta(\"type_name\", prefix=\"type: \")>>",
    "<<meta_all(no_links=True, exclude=[\"layout\",\"style\",\"user\",\"created_at\",\"updated_at\",\"closed_at\",\"service\",\"url\",\"avatar\", \"type\",\"query\",\"specific\",\"max_amount\",\"max_content_lines\",\"id_prefix\"])>>",
    "<<meta_links_all()>>",
]

[needs.layouts.score]
grid = "complex"

[needs.layouts.score.layout]
footer = [
    "<<meta(\"type_name\")>>",
]
footer_left = [
    "<<meta_id()>>",
]
footer_right = []
head = [
    "<<meta(\"status\",prefix=\"status: \")>>",
    "<<meta(\"security\",prefix=\"security: \")>>",
    "<<meta(\"safety\",prefix=\"safety: \")>>",
]
head_left = [
    "<<meta(\"title\")>>",
]
head_right = [
    "<<collapse_button(\"meta\",collapsed=\"icon:arrow-down-circle\",visible=\"icon:arrow-right-circle\",initial=False)>>",
]
meta_left = [
    "<<meta_all(no_links=True, exclude=[\"layout\",\"style\", \"fully_verified_by\", \"status\", \"security\", \"safety\"])>>",
    "<<meta_links_all(exclude=[\"fully_verified_by\", \"fully_verifies_back\", \"partially_verified_by\", \"partially_verifies_back\"])>>",
]
meta_right = []

[needs.render_context]

[needs.string_links.source_code_linker]
link_name = "{{name}}"
link_url = "{{url}}"
options = [
    "source_code_link",
    "testlink",
]
regex = "(?P<url>.+)<>(?P<name>.+)"

[[needs.types]]
directive = "assertion"
parts = 3
prefix = "assertion__"
tags = []
title = "Assertion"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^assertion__[0-9a-zA-Z_-]*$"
status = "^(draft|valid)$"

[needs.types.optional_links]
links = "^.*$"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "aou_req"
parts = 3
prefix = "aou_req__"
tags = [
    "requirement",
    "requirement_excl_process",
]
title = "Assumption of Use Requirement"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
id = "^aou_req__[0-9a-z_]+$"
reqtype = "^(Functional|Interface|Process|Non-Functional)$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
codelink = "^.*$"
hash = "^.*$"
reqcovered = "^(YES|NO)$"
source_code_link = "^https://github.com/.*"
testcovered = "^(YES|NO)$"
testlink = "^https://github.com/.*"

[[needs.types]]
color = "#888888"
directive = "commit"
prefix = "C_"
style = "card"
title = "Commit"

[[needs.types]]
directive = "comp_arc_sta"
parts = 3
prefix = "comp_arc_sta__"
style = "card"
tags = [
    "architecture_element",
    "architecture_view",
]
title = "Component & Component Package Diagram"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^comp_arc_sta__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]
fulfils = "comp_req"
implements = "logic_arc_int, real_arc_int_op"
includes = "comp_arc_sta"
uses = "logic_arc_int, real_arc_int_op"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "comp_saf_dfa"
parts = 3
prefix = "comp_saf_dfa__"
tags = [
    "dependent_failure_analysis",
    "safety_analysis",
]
title = "Component DFA (Dependent Failure Analysis)"

[needs.types.mandatory_links]
violates = "comp_arc_sta"

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
failure_effect = "^.*$"
failure_id = "^.*$"
id = "^comp_saf_dfa__[0-9a-z_]+$"
status = "^(valid|invalid)$"
sufficient = "^(yes|no)$"

[needs.types.optional_links]
mitigated_by = "comp_req, aou_req"

[needs.types.optional_options]
mitigation_issue = "^https://github.com/.*$"
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "comp_saf_fmea"
parts = 3
prefix = "comp_saf_fmea__"
tags = [
    "failure_mode_effects_analysis",
    "safety_analysis",
]
title = "Component FMEA (Failure Mode and Effects Analysis)"

[needs.types.mandatory_links]
violates = "comp_arc_dyn"

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
failure_effect = "^.*$"
fault_id = "^.*$"
id = "^comp_saf_fmea__[0-9a-z_]+$"
status = "^(valid|invalid)$"
sufficient = "^(yes|no)$"

[needs.types.optional_links]
mitigated_by = "comp_req, aou_req"

[needs.types.optional_options]
mitigation_issue = "^https://github.com/.*$"
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "comp_req"
parts = 3
prefix = "comp_req__"
tags = [
    "requirement",
    "requirement_excl_process",
]
title = "Component Requirement"

[needs.types.mandatory_links]
satisfies = "feat_req"

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
id = "^comp_req__[0-9a-z_]+$"
reqtype = "^(Functional|Interface|Process|Non-Functional)$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
codelink = "^.*$"
hash = "^.*$"
reqcovered = "^(YES|NO)$"
source_code_link = "^https://github.com/.*"
testcovered = "^(YES|NO)$"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "comp_arc_dyn"
parts = 3
prefix = "comp_arc_dyn__"
style = "card"
tags = [
    "architecture_view",
    "architecture_element",
]
title = "Component Sequence Diagram"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^comp_arc_dyn__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]
fulfils = "comp_req"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "doc_concept"
parts = 2
prefix = "doc_concept__"
tags = []
title = "Concept Definition"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^doc_concept__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "dec_rec"
parts = 3
prefix = "dec_rec__"
tags = []
title = "Decision Record"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
context = "^.*$"
decision = "^.*$"
id = "^dec_rec__[0-9a-z_]+$"
status = "^(proposed|accepted|deprecated|rejected|superseded)$"

[needs.types.optional_links]
affects = "^.*$"

[needs.types.optional_options]
consequences = "^.*$"
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "dd_dyn"
parts = 3
prefix = "dd_dyn__"
style = "card"
tags = []
title = "Dynamic detailed design"

[needs.types.mandatory_links]
implements = "comp_req"
satisfies = "comp_arc_sta"

[needs.types.mandatory_options]
id = "^dd_dyn__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "feat_arc_sta"
parts = 3
prefix = "feat_arc_sta__"
style = "card"
tags = [
    "architecture_element",
    "architecture_view",
]
title = "Feature & Feature Package Diagram"

[needs.types.mandatory_links]
fulfils = "feat_req"
includes = "^logic_arc_int(_op)*__.+$"

[needs.types.mandatory_options]
id = "^feat_arc_sta__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "feat_saf_dfa"
parts = 3
prefix = "feat_saf_dfa__"
tags = [
    "dependent_failure_analysis",
    "safety_analysis",
]
title = "Feature DFA (Dependent Failure Analysis)"

[needs.types.mandatory_links]
violates = "feat_arc_sta"

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
failure_effect = "^.*$"
failure_id = "^.*$"
id = "^feat_saf_dfa__[0-9a-z_]+$"
status = "^(valid|invalid)$"
sufficient = "^(yes|no)$"

[needs.types.optional_links]
mitigated_by = "feat_req, aou_req"

[needs.types.optional_options]
mitigation_issue = "^https://github.com/.*$"
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "plat_saf_dfa"
parts = 3
prefix = "plat_saf_dfa__"
tags = []
title = "Feature Dependent Failure Analysis"

[needs.types.mandatory_links]
violates = "feat_arc_sta"

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
failure_effect = "^.*$"
failure_id = "^.*$"
id = "^plat_saf_dfa__[0-9a-z_]+$"
status = "^(valid|invalid)$"
sufficient = "^(yes|no)$"

[needs.types.optional_links]
mitigated_by = "feat_req, aou_req"

[needs.types.optional_options]
mitigation_issue = "^https://github.com/.*$"
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "feat_saf_fmea"
parts = 3
prefix = "feat_saf_fmea__"
tags = [
    "failure_mode_effects_analysis",
    "safety_analysis",
]
title = "Feature FMEA (Failure Mode and Effects Analysis)"

[needs.types.mandatory_links]
violates = "feat_arc_dyn"

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
failure_effect = "^.*$"
fault_id = "^.*$"
id = "^feat_saf_fmea__[0-9a-z_]+$"
status = "^(valid|invalid)$"
sufficient = "^(yes|no)$"

[needs.types.optional_links]
mitigated_by = "feat_req, aou_req"

[needs.types.optional_options]
mitigation_issue = "^https://github.com/.*$"
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "feat_req"
parts = 3
prefix = "feat_req__"
style = "node"
tags = [
    "requirement",
    "requirement_excl_process",
]
title = "Feature Requirement"

[needs.types.mandatory_links]
satisfies = "stkh_req"

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
id = "^feat_req__[0-9a-z_]+$"
reqtype = "^(Functional|Interface|Process|Non-Functional)$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
codelink = "^.*$"
hash = "^.*$"
reqcovered = "^(YES|NO)$"
source_code_link = "^https://github.com/.*"
testcovered = "^(YES|NO)$"
testlink = "^https://github.com/.*"
valid_from = "^v(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?$"
valid_until = "^v(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?$"

[[needs.types]]
directive = "feat_arc_dyn"
parts = 3
prefix = "feat_arc_dyn__"
style = "card"
tags = [
    "architecture_view",
    "architecture_element",
]
title = "Feature Sequence Diagram"

[needs.types.mandatory_links]
fulfils = "feat_req"

[needs.types.mandatory_options]
id = "^feat_arc_dyn__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "document"
parts = 2
prefix = "doc__"
tags = []
title = "Generic Document"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^doc__[0-9a-z_]+$"
status = "^(valid|draft|invalid)$"

[needs.types.optional_links]
realizes = "workproduct"

[needs.types.optional_options]
approver = "^.*$"
author = "^.*$"
reviewer = "^.*$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "doc_getstrt"
parts = 2
prefix = "doc_getstrt__"
tags = []
title = "Getting Started"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^doc_getstrt__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "real_arc_int"
parts = 3
prefix = "real_arc_int__"
style = "card"
tags = [
    "architecture_element",
    "architecture_view",
]
title = "Interface & Component Interface"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^real_arc_int__[0-9a-z_]+$"
language = "^(cpp|rust)$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]
fulfils = "comp_req"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "real_arc_int_op"
parts = 3
prefix = "real_arc_int_op__"
style = "card"
tags = [
    "architecture_element",
]
title = "Interface Operation"

[needs.types.mandatory_links]
included_by = "real_arc_int"

[needs.types.mandatory_options]
id = "^real_arc_int_op__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]
implements = "logic_arc_int_op"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
color = "#cccccc"
directive = "issue"
prefix = "IS_"
style = "card"
title = "Issue"

[[needs.types]]
directive = "logic_arc_int"
parts = 3
prefix = "logic_arc_int__"
style = "card"
tags = [
    "architecture_element",
    "architecture_view",
]
title = "Logical Interface & Feature Interface View"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^logic_arc_int__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]
fulfils = "feat_req"
includes = "logic_arc_int_op"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "logic_arc_int_op"
parts = 3
prefix = "logic_arc_int_op__"
style = "card"
tags = [
    "architecture_element",
]
title = "Logical Interface Operation"

[needs.types.mandatory_links]
included_by = "logic_arc_int"

[needs.types.mandatory_options]
id = "^logic_arc_int_op__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "mod_view_dyn"
parts = 3
prefix = "mod_view_dyn__"
style = "card"
tags = []
title = "Module Architecture Dynamic View"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^mod_view_dyn__[0-9a-z_]+$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "mod_view_sta"
parts = 3
prefix = "mod_view_sta__"
style = "card"
tags = [
    "architecture_view",
]
title = "Module Architecture Static View"

[needs.types.mandatory_links]
includes = "comp_arc_sta"

[needs.types.mandatory_options]
id = "^mod_view_sta__[0-9a-z_]+$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "gd_chklst"
parts = 2
prefix = "gd_chklst__"
tags = []
title = "Process Checklist"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^gd_chklst__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]
complies = "std_req"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "gd_guidl"
parts = 2
prefix = "gd_guidl__"
tags = []
title = "Process Guideline"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^gd_guidl__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]
complies = "std_req"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "gd_method"
parts = 2
prefix = "gd_meth__"
tags = []
title = "Process Method"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^gd_meth__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]
complies = "std_req"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "gd_req"
parts = 2
prefix = "gd_req__"
tags = [
    "requirement",
]
title = "Process Requirements"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
id = "^gd_req__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]
complies = "std_req"
satisfies = "workflow"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "gd_temp"
parts = 2
prefix = "gd_temp__"
tags = []
title = "Process Template"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^gd_temp__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]
complies = "std_req"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
color = "#aaaaaa"
directive = "pr"
prefix = "PR_"
style = "card"
title = "PullRequest"

[[needs.types]]
directive = "review_header"
parts = 3
prefix = "review_header__"
tags = []
title = "Review Header"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
approvers = "^.*$"
hash = "^.*$"
id = "^review_header__[0-9a-z_]+$"
reviewers = "^.*$"
template = "^.*$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "role"
parts = 2
prefix = "rl__"
tags = []
title = "Role"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^rl__[0-9a-z_]+$"

[needs.types.optional_links]
contains = "role"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "sw_unit"
parts = 3
prefix = "sw_unit__"
tags = []
title = "Software unit"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^sw_unit__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "sw_unit_int"
parts = 3
prefix = "sw_unit_int__"
style = "card"
tags = []
title = "Software unit interfaces"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^sw_unit_int__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "stkh_req"
parts = 3
prefix = "stkh_req__"
tags = [
    "requirement",
    "requirement_excl_process",
]
title = "Stakeholder Requirement"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^stkh_req__[0-9a-z_]+$"
rationale = "^.+$"
reqtype = "^(Functional|Interface|Process|Non-Functional)$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]

[needs.types.optional_options]
codelink = "^.*$"
hash = "^.*$"
reqcovered = "^(YES|NO)$"
source_code_link = "^https://github.com/.*"
testcovered = "^(YES|NO)$"
testlink = "^https://github.com/.*"
valid_from = "^v(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?$"
valid_until = "^v(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?$"

[[needs.types]]
directive = "std_req"
parts = 3
prefix = "std_req__"
tags = []
title = "Standard Requirement"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^std_req__(iso26262|isosae21434|isopas8926|aspice_40)__[0-9a-zA-Z_-]*$"
status = "^(valid)$"

[needs.types.optional_links]
links = "^.*$"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "std_wp"
parts = 3
prefix = "std_wp__"
tags = []
title = "Standard Work Product"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^std_wp__(iso26262|isosae21434|isopas8926|aspice_40)__[0-9a-z_]*$"
status = "^(valid)$"

[needs.types.optional_links]

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "dd_sta"
parts = 3
prefix = "dd_sta__"
style = "card"
tags = []
title = "Static detailed design"

[needs.types.mandatory_links]
implements = "comp_req"
satisfies = "comp_arc_sta"

[needs.types.mandatory_options]
id = "^dd_sta__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]
includes = "sw_unit"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "tsf"
parts = 3
prefix = "tsf__"
tags = []
title = "TSF"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^tsf__[0-9a-zA-Z_-]*$"
status = "^(draft|valid)$"

[needs.types.optional_links]
links = "^.*$"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "tenet"
parts = 3
prefix = "tenet__"
tags = []
title = "Tenet"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^tenet__[0-9a-zA-Z_-]*$"
status = "^(draft|valid)$"

[needs.types.optional_links]
links = "^.*$"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "testcase"
parts = 3
prefix = "testcase__"
tags = []
title = "Testcase Needs parsed from test.xml files"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^testcase__[0-9a-z_]+$"

[needs.types.optional_links]
fully_verifies = "^.*$"
partially_verifies = "^.*$"

[needs.types.optional_options]
derivation_technique = "^.*$"
file = "^.*$"
line = "^.*$"
name = "^.*$"
result = "^.*$"
result_text = "^.*$"
source_code_link = "^https://github.com/.*"
test_type = "^.*$"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "tool_req"
parts = 2
prefix = "tool_req__"
tags = [
    "requirement",
    "requirement_excl_process",
]
title = "Tool Requirement"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
content = "^[\\s\\S]+$"
id = "^tool_req__[0-9a-z_]+$"
safety = "^(QM|ASIL_B)$"
security = "^(YES|NO)$"
status = "^(valid|invalid)$"

[needs.types.optional_links]
satisfies = "gd_req, stkh_req"

[needs.types.optional_options]
codelink = "^.*$"
hash = "^.*$"
implemented = "^(YES|PARTIAL|NO)$"
parent_covered = "^.*$"
parent_has_problem = "^.*$"
reqcovered = "^(YES|NO)$"
source_code_link = "^https://github.com/.*"
tags = "^.*$"
testcovered = "^(YES|NO)$"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "doc_tool"
parts = 2
prefix = "doc_tool__"
tags = []
title = "Tool Verification Report"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^doc_tool__[0-9a-z_]+$"
safety_affected = "^(YES|NO)$"
security_affected = "^(YES|NO)$"
status = "^(draft|evaluated|qualified|released|rejected)$"
tcl = "^(LOW|HIGH)$"
version = "^.*$"

[needs.types.optional_links]
realizes = "workproduct"

[needs.types.optional_options]
approver = "^.*$"
author = "^.*$"
reviewer = "^.*$"
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "workflow"
parts = 2
prefix = "wf__"
tags = []
title = "Workflow"

[needs.types.mandatory_links]
approved_by = "role"
input = "workproduct"
output = "workproduct"
responsible = "role"

[needs.types.mandatory_options]
id = "^wf__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]
contains = "^gd_(req|temp|chklst|guidl|meth)__.*$"
has = "^doc_(getstrt|concept)__.*$"
supported_by = "role"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[[needs.types]]
directive = "workproduct"
parts = 2
prefix = "wp__"
tags = []
title = "Workproduct"

[needs.types.mandatory_links]

[needs.types.mandatory_options]
id = "^wp__[0-9a-z_]+$"
status = "^(valid|draft)$"

[needs.types.optional_links]
complies = "std_wp, ^std_req__aspice_40__iic.*$"

[needs.types.optional_options]
source_code_link = "^https://github.com/.*"
testlink = "^https://github.com/.*"

[parse.extend_directives.grid]
argument = true
options = true
content = true
parse_content = true
content_required = true

[parse.extend_directives.grid-item-card]
argument = false
options = true
content = true
parse_content = true
content_required = true

[parse.extend_directives.uml]
argument = true
options = true
content = true
parse_content = false
content_required = false
